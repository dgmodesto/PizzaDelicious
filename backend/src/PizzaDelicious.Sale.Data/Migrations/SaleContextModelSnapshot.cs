// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaDelicious.Sale.Data;

namespace PizzaDelicious.Sale.Data.Migrations
{
    [DbContext(typeof(SaleContext))]
    partial class SaleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.MySequence", "'MySequence', '', '1000', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaDelicious.Sale.Domain.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClientId");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1001);

                    b.Property<decimal>("Discount");

                    b.Property<int>("OrderStatus");

                    b.Property<DateTime>("RegisterDate");

                    b.Property<decimal>("TotalValue");

                    b.Property<Guid>("VoucherId");

                    b.Property<bool>("VoucherUsed");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaDelicious.Sale.Domain.Models.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("OrderId");

                    b.Property<Guid>("ProductId");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("varhcar(250)");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitValue");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("PizzaDelicious.Sale.Domain.Models.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreateDate");

                    b.Property<decimal?>("DiscountValue");

                    b.Property<bool>("Enable");

                    b.Property<decimal?>("Percent");

                    b.Property<int>("Quantity");

                    b.Property<int>("TypeVoucherDiscount");

                    b.Property<DateTime?>("UseDate");

                    b.Property<bool>("Used");

                    b.Property<DateTime>("ValidateDate");

                    b.HasKey("Id");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("PizzaDelicious.Sale.Domain.Models.Order", b =>
                {
                    b.HasOne("PizzaDelicious.Sale.Domain.Models.Voucher", "Voucher")
                        .WithMany("Orders")
                        .HasForeignKey("VoucherId");
                });

            modelBuilder.Entity("PizzaDelicious.Sale.Domain.Models.OrderItem", b =>
                {
                    b.HasOne("PizzaDelicious.Sale.Domain.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
